#!/usr/bin/python
# -*- coding: utf-8 -*-
"""Program docstring.

Application to format munin conf entries to html or modify an entry
- assume munin.conf rw for www-data (!)

"""
__author__ = "Zacharias El Banna"
__version__ = "2.0"
__status__ = "Production"

from sys import path as syspath
syspath.append('/usr/local/sbin')
from Munin import muninLoadConf, muninSetConf, muninDiscover
from WWW import Web              

web  = Web('Munin Operations')
op   = web.getvalue('op','view')

web.printHeader()

if op == "discover":
 start = web.getvalue('start',None)
 end   = web.getvalue('end', None)
 domain= web.getvalue('domain', None)
 if start and end and domain:
  print "<B>Starting new discovery</B>"
  print "Verify results in default file locations!"
  muninDiscover(start, end, domain)
else:
 node  = web.getvalue('node',None)
 state = web.getvalue('state',None)

 if op == "view" and node:
  munindict = muninLoadConf('/etc/munin/munin.conf')
  print "<A>" + node + " update is set to [" + munindict.get(node)[1] + "] and handler is [" + munindict.get(node)[0] + "]</A>"
 else:
  if op == "config" and node and state:
   nstate = "yes" if state == "no" else "no"
   muninSetConf('/etc/munin/munin.conf', node, nstate)

  munindict = muninLoadConf('/etc/munin/munin.conf')
  keys = munindict.keys()
  keys.sort()
  print "<DIV CLASS='z-system' id='munin-op' style='float:left;'>"
  print "<DIV CLASS='z-op-panel'>"
  print "<TABLE id=varannan><TR><TH>Node</TH><TH>Update</TH></TR>"
  for entry in keys:
   state = munindict.get(entry)[1]
   print "<TR><TD><A HREF='munin-web.cgi?op=view&node=" + entry +"'>" + entry + "</A></TD>"
   print "<TD><A CLASS='z-btn z-small-btn' HREF='munin-web.cgi?op=config&node=" + entry + "&state=" + state + "'><IMG SRC=images/btn_{}.png></A></TD></TR>".format("start" if state == "no" else "shutdown")
  print "</TABLE>"
  print "</DIV></DIV>"
