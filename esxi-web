#!/usr/bin/python
# -*- coding: utf-8 -*-
"""Program docstring.

Application for web based ESXi operations


"""
__author__ = "Zacharias El Banna"
__version__ = "6.0"
__status__ = "Production"

from subprocess import check_call, check_output
from sys import exit, path as syspath
syspath.append('/usr/local/sbin')
from ESXi import ESXi
from Munin import Munin
from WWW import Web

web    = Web('ESXi Operations')
web.printHeader()

host   = web.getvalue('host',"esxi1")
domain = web.getvalue('domain',"stolab")
fqdn   = host + "." + domain
nstate = web.getvalue('next-state',None)
vmid   = web.getvalue('vmid','-1')
esxi   = ESXi(fqdn)
baselink = "esxi-web.cgi?host={0}&domain={1}&next-state".format(host,domain)

#
# UPS.class -> check status and show here?
#
print "<UL CLASS='z-navbar'>"
print "<LI><A style='background-color:red' HREF={0}=poweroff>Shutdown</A></LI>".format(baselink)
print "<LI><A HREF='#picture' onclick=document.getElementById('picture').style.display='block'>Picture</A></LI>"
print "<LI><A HREF='#stats'   onclick=document.getElementById('stats').style.display='block'>Stats</A></LI>"
print "<LI><A HREF='#vmops'   onclick=document.getElementById('vmops').style.display='block'>VM OPs</A></LI>"
print "<LI><A HREF=https://{0}/ui target=esxi_cont>UI</A></LI>".format(fqdn)
kvmtype = esxi.getKVMType('ipmi')
if kvmtype == "amt":
 print "<LI><A HREF=http://{0}-{2}.{1}:16992 target=esxi_kvm>{3}</A></LI>".format(host,domain,kvmtype,kvmtype.upper())
else:
 print "<LI><A HREF=http://{0}-{2}.{1}/index.html target=esxi_kvm>{3}</A></LI>".format(host,domain,kvmtype,kvmtype.upper())
print "<LI><A onclick=window.location.reload()>Refresh</A></LI>"
print "</UL><BR><BR>"


print "<DIV CLASS='z-system' id='picture' style='display:none;'>"
print "<CENTER><A onclick=this.parentElement.style.display='none'><IMG SRC='images/" + host + ".jpg'></A></CENTER>"
print "</DIV>"

if nstate:
 print "<DIV CLASS='z-system'>"
 print "<DIV CLASS='z-log'>"
 print "<CENTER><B>"
 if "vm-" in nstate:
  vmop = nstate.split('-')[1]
  print "[Sent command '" + vmop + "' for vmid:" + vmid + "]"
  esxi.sshConnect()
  esxi.sshSend("vim-cmd vmsvc/power." + vmop + " " + vmid)
  esxi.sshClose()
 elif nstate == 'poweroff':
  esxi.sshConnect()
  esxi.sshSend("poweroff")
  esxi.sshClose()
  print "[powering off host]"
 elif nstate == 'vmsoff':
  check_call("/usr/local/sbin/esxi-shutdown " + host + " &", shell=True)
  print "[safely shutting down all VMs, refresh page to follow progress]"
 print "</B></CENTER>"
 print "</DIV>"
 print "</DIV>"

munin  = Munin('/etc/munin/munin.conf','/mnt/ramdisk/munin/lib/')
print "<DIV CLASS='z-system' id='stats' style='display:none;'>"
print "<DIV CLASS='z-munin-1x3'>"
munin.printHtml("{1}/{0}/esxi_vm_info".format(fqdn,domain))
munin.printHtml("{1}/{0}/esxi_cpu_info".format(fqdn,domain))
munin.printHtml("{1}/{0}/esxi_mem_info".format(fqdn,domain))
print "<A class='z-btn z-small-btn' onclick=this.parentElement.style.display='none' style='vertical-align:top;'><B>X</B></A>"
print "</DIV>"
print "</DIV>"

#
# VM OPs Menu and log
#
print "<DIV CLASS='z-system' id='vmops' style='float:left; display:none'>"
print "<DIV CLASS='z-op-panel'>"
print "<TABLE BORDER=0 id='varannan'>"
print "<TR id='bigsolid'><TH COLSPAN=2>{}</TH></TR>".format(fqdn)
print "<TR><TH>VM</TH><TH WIDTH=120>Operations</TH></TR>"
print "<TR><TD><B>SHUTDOWN ALL VMs</B></TD><TD><CENTER><A CLASS='z-btn z-small-btn' HREF={0}=vmsoff><IMG SRC=images/shutdown.png></A></CENTER></TD></TR>".format(baselink)
statelist = esxi.loadVMs()
for vm in statelist:
 if vm[0] == vmid:
  print "<TR><TD><B>" + vm[1] + "</B></TD>"
 else:
  print "<TR><TD>" + vm[1] + "</TD>"
 print "<TD><CENTER>"
 if vm[2] == "1":
  print "<A CLASS='z-btn z-small-btn' HREF={0}=vm-shutdown&vmid={1}><IMG SRC=images/btn_shutdown.png></A>".format(baselink,vm[0])
  print "<A CLASS='z-btn z-small-btn' HREF={0}=vm-off&vmid={1}><IMG SRC=images/btn_poweroff.png></A>".format(baselink,vm[0])
  print "<A CLASS='z-btn z-small-btn' HREF={0}=vm-reboot&vmid={1}><IMG SRC=images/btn_reboot.png></A>".format(baselink,vm[0])
 elif vm[2] == "3":
  print "<A CLASS='z-btn z-small-btn' HREF={0}=vm-suspendResume&vmid={1}><IMG SRC=images/btn_start.png></A>".format(baselink,vm[0])
 else:
  print "<A CLASS='z-btn z-small-btn' HREF={0}=vm-on&vmid={1}><IMG SRC=images/btn_start.png></A>".format(baselink,vm[0])
 print "</CENTER></TD></TR>"
print "</TABLE>"
print "</DIV>"
print "</DIV>"

print "<DIV CLASS='z-system'>"
print "<DIV CLASS='z-font-header'>{} OP logs</DIV>".format(fqdn)
try:
 logs = check_output("tail -n 10 /var/log/network/"+ host +".operations.log | tac", shell=True)
 print "<DIV CLASS='z-logs'>{}</DIV>".format(logs.replace('\n','<BR>'))
except:
 print "<CENTER><B>Logs Error</B></CENTER>" 
print "</DIV>"
print "<BR style='clear:left;'>"
